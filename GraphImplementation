#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

vector<pair<int, int>> graph[1000];
int visited[1000];

void dfs(int cur){
    if(visited[cur]){
        return;
    }

    cout<<cur<<" ";
    visited[cur] = 1;
    for(int i = 0;i<graph[cur].size();i++){
        dfs(graph[cur][i].first) ;
    }
}

int main(){
    int n,m;
    int a,b,w;
    cin>>n>>m;// m = edges n = vertices
    for(int i = 0;i<m;i++){
        cin >> a >> b >> w; // w = weight
        graph[a].push_back(make_pair(b,w));
        graph[b].push_back(make_pair(b,w));
    }

    cout<<"Printing the graph by dfs"<<endl;
    dfs(0);

    return 0;
}

